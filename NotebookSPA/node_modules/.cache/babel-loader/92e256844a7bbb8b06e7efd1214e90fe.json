{"remainingRequest":"E:\\前端\\NotebookSPA\\NotebookSPA\\node_modules\\thread-loader\\dist\\cjs.js!E:\\前端\\NotebookSPA\\NotebookSPA\\node_modules\\babel-loader\\lib\\index.js!E:\\前端\\NotebookSPA\\NotebookSPA\\src\\main.js","dependencies":[{"path":"E:\\前端\\NotebookSPA\\NotebookSPA\\src\\main.js","mtime":1607526828552},{"path":"E:\\前端\\NotebookSPA\\NotebookSPA\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1604303186290},{"path":"E:\\前端\\NotebookSPA\\NotebookSPA\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1604303177903},{"path":"E:\\前端\\NotebookSPA\\NotebookSPA\\node_modules\\babel-loader\\lib\\index.js","mtime":1604303222147}],"contextDependencies":[],"result":["import \"E:\\\\\\u524D\\u7AEF\\\\NotebookSPA\\\\NotebookSPA\\\\node_modules\\\\core-js\\\\modules\\\\es6.array.iterator.js\";\nimport \"E:\\\\\\u524D\\u7AEF\\\\NotebookSPA\\\\NotebookSPA\\\\node_modules\\\\core-js\\\\modules\\\\es6.promise.js\";\nimport \"E:\\\\\\u524D\\u7AEF\\\\NotebookSPA\\\\NotebookSPA\\\\node_modules\\\\core-js\\\\modules\\\\es6.object.assign.js\";\nimport \"E:\\\\\\u524D\\u7AEF\\\\NotebookSPA\\\\NotebookSPA\\\\node_modules\\\\core-js\\\\modules\\\\es7.promise.finally.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport VueRouter from 'vue-router';\nimport axios from 'axios';\nimport App from \"./App.vue\";\nimport TheSignup from \"./pages/TheSignup.vue\";\nimport TheItemAdd from \"./pages/TheItemAdd.vue\";\nimport TheItemList from \"./pages/TheItemList.vue\";\nimport \"./assets/css/bootstrap.min.css\";\nimport \"./assets/js/jquery-3.3.1.js\";\nimport \"./assets/js/bootstrap.min.js\";\nVue.config.productionTip = false; //模块化代码中，需要使用vuerouter\n\nVue.use(VueRouter);\naxios.defaults.baseURL = 'http://8.129.133.156:8080/NotebookSPA0/';\nVue.prototype.$axios = axios; // 2. 定义路由\n// 每个路由应该映射一个组件。 其中\"component\" 可以是\n// 通过 Vue.extend() 创建的组件构造器，\n// 或者，只是一个组件配置对象。\n// 我们晚点再讨论嵌套路由。\n\nvar routes = [{\n  path: '/',\n  redirect: '/user_signup'\n}, {\n  path: '/user_signup',\n  component: TheSignup,\n  meta: {\n    title: \"用户注册\"\n  }\n}, {\n  name: \"item_list\",\n  path: '/item_list',\n  component: TheItemList,\n  meta: {\n    title: \"记账列表\"\n  }\n}, {\n  path: '/item_add',\n  component: TheItemAdd,\n  meta: {\n    title: \"新增记账\"\n  }\n}]; // 3. 创建 router 实例，然后传 `routes` 配置\n// 你还可以传别的配置参数, 不过先这么简单着吧。\n\nvar router = new VueRouter({\n  mode: 'history',\n  routes: routes // (缩写) 相当于 routes: routes\n\n});\nrouter.beforeEach(function (to, from, next) {\n  if (to.meta.title) {\n    document.title = to.meta.title;\n  }\n\n  next();\n});\nvar vm = new Vue({\n  data: {},\n  methods: {},\n  computed: {}\n});\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  state: {\n    user: {\n      id: 0,\n      username: \"未登录\"\n    }\n  },\n  getters: {\n    getUser: function getUser() {\n      return state.user.id + \"-\" + state.user.username;\n    }\n  },\n  mutations: {\n    setUser: function setUser(state, user) {\n      state.user.id = user.id;\n      state.user.username = user.username;\n    }\n  }\n}); //Vue.prototype.$store = store;\n// 4. 创建和挂载根实例。\n// 记得要通过 router 配置参数注入路由，\n// 从而让整个应用都有路由功能\n\nnew Vue({\n  router: router,\n  store: store,\n  render: function render(h) {\n    return h(App);\n  }\n}).$mount('#app');",{"version":3,"sources":["E:\\前端\\NotebookSPA\\NotebookSPA\\src\\main.js"],"names":["Vue","Vuex","VueRouter","axios","App","TheSignup","TheItemAdd","TheItemList","config","productionTip","use","defaults","baseURL","prototype","$axios","routes","path","redirect","component","meta","title","name","router","mode","beforeEach","to","from","next","document","vm","data","methods","computed","store","Store","state","user","id","username","getters","getUser","mutations","setUser","render","h","$mount"],"mappings":"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","sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport VueRouter from 'vue-router'\r\nimport axios from 'axios'\r\nimport App from './App.vue'\r\nimport TheSignup from './pages/TheSignup.vue'\r\nimport TheItemAdd from './pages/TheItemAdd.vue'\r\nimport TheItemList from './pages/TheItemList.vue'\r\nimport './assets/css/bootstrap.min.css'\r\nimport './assets/js/jquery-3.3.1.js'\r\nimport './assets/js/bootstrap.min.js'\r\nVue.config.productionTip = false;\r\n//模块化代码中，需要使用vuerouter\r\nVue.use(VueRouter);\r\naxios.defaults.baseURL = 'http://8.129.133.156:8080/NotebookSPA0/';\r\nVue.prototype.$axios = axios\r\n// 2. 定义路由\r\n// 每个路由应该映射一个组件。 其中\"component\" 可以是\r\n// 通过 Vue.extend() 创建的组件构造器，\r\n// 或者，只是一个组件配置对象。\r\n// 我们晚点再讨论嵌套路由。\r\nconst routes = [{\r\n\t\tpath: '/',\r\n\t\tredirect: '/user_signup'\r\n\t},\r\n\t{\r\n\t\tpath: '/user_signup',\r\n\t\tcomponent: TheSignup,\r\n\t\tmeta:{title:\"用户注册\"},\r\n\t},\r\n\t{\r\n\t\tname:\"item_list\",\r\n\t\tpath: '/item_list',\r\n\t\tcomponent: TheItemList,\r\n\t\tmeta:{title:\"记账列表\"},\r\n\t},\r\n\t{\r\n\t\tpath: '/item_add',\r\n\t\tcomponent: TheItemAdd,\r\n\t\tmeta:{title:\"新增记账\"},\r\n\t}\r\n];\r\n\r\n// 3. 创建 router 实例，然后传 `routes` 配置\r\n// 你还可以传别的配置参数, 不过先这么简单着吧。\r\nconst router = new VueRouter({\r\n\tmode: 'history',\r\n\troutes:routes, // (缩写) 相当于 routes: routes\r\n});\r\n\r\nrouter.beforeEach((to,from,next)=>{\r\n\tif(to.meta.title){\r\n\t\tdocument.title = to.meta.title;\r\n\t}\r\n\tnext();\r\n});\r\n\r\nvar vm = new Vue({\r\n\tdata:{},\r\n\tmethods:{},\r\n\tcomputed:{},\r\n});\r\n\r\nVue.use(Vuex);\r\nconst store = new Vuex.Store({\n  state: {\r\n\tuser:{\r\n\t\tid:0,\r\n\t\tusername:\"未登录\",\r\n\t}\n  },\r\n  getters:{\r\n\t  getUser:function(){\r\n\t\treturn state.user.id + \"-\" +state.user.username; \r\n\t  },\r\n  },\n  mutations: {    \r\n\tsetUser:function(state,user){\r\n\t\tstate.user.id = user.id;\r\n\t\tstate.user.username = user.username;\r\n\t},\t\n  }\n})\r\n//Vue.prototype.$store = store;\r\n// 4. 创建和挂载根实例。\r\n// 记得要通过 router 配置参数注入路由，\r\n// 从而让整个应用都有路由功能\r\nnew Vue({\r\n\trouter:router,\r\n\tstore:store,\r\n\trender: h => h(App),\r\n}).$mount('#app')\n"]}]}